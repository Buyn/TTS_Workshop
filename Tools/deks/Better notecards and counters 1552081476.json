{
  "SaveName": "Better notecards and counters",
  "GameMode": "Better Notes and Counters",
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Date": "10/28/2019 1:25:15 PM",
  "Table": "Table_Circular",
  "Sky": "Sky_Museum",
  "Note": "",
  "Rules": "",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
  "LuaScript": "--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]\n\n--[[ The onLoad event is called after the game save finishes loading. --]]\nfunction onLoad()\n    --[[ print('onLoad!') --]]\nend\n\n--[[ The onUpdate event is called once per frame. --]]\nfunction onUpdate()\n    --[[ print('onUpdate loop!') --]]\nend",
  "LuaScriptState": "",
  "MusicPlayer": {
    "RepeatSong": false,
    "PlaylistEntry": 23,
    "CurrentAudioTitle": "The Binding of Isaac Antibirth OST Subterranean Homesick Malign (Caves)",
    "CurrentAudioURL": "http://cloud-3.steamusercontent.com/ugc/771729113224675711/32FB11610C3D92E679140F6C2D5FD498F096A3B4/",
    "AudioLibrary": [
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224634775/AEB015895136DF2829B35A9BC3B3E4768A87AF23/",
        "Item2": "The Binding of Isaac Antibirth OST Depression Shop"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224637499/CC4F74C62B93E141011DB59BE830175F7F493B9E/",
        "Item2": "The Binding of Isaac Antibirth OST Descent (Title)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224643089/AF7B445B49B341C7F253D60E3A69BE5F256B4D27/",
        "Item2": "The Binding of Isaac Antibirth OST Drowning (Corpse)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224646729/3BBAA5106094FA669A1C5F4CB9EF40A535B159B7/",
        "Item2": "The Binding of Isaac Antibirth OST Dystension (Womb)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224649423/3FFC207AA5105A087A86C43D16C913388754F323/",
        "Item2": "The Binding of Isaac Antibirth OST Esc (Arcade)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224650768/24874F88F896A892EB65D03AE5210C7FA630EC22/",
        "Item2": "The Binding of Isaac Antibirth OST Fault Lines (Mines)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224652562/A5CFC8C9F71901E96D63FB3DEBA0D3A3EAF716A4/",
        "Item2": "The Binding of Isaac Antibirth OST Forgotten Lullaby (Secret Room)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224653965/55A595287F1A6AFE0B3F69184C9BE9F6391993ED/",
        "Item2": "The Binding of Isaac Antibirth OST Gloria Filio (Mom's Heart)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224656735/960F20651F97C6AD8D03004850817A29ACFD00EA/",
        "Item2": "The Binding of Isaac Antibirth OST Hallowed Ground (Downpour)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224660027/084B8957FD342259521E7B07E773CCD350E7392A/",
        "Item2": "The Binding of Isaac Antibirth OST Innocence Glitched (Basement)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224661003/18F6ECAAED080B857FE09B2AF6BABF60AB75A9B6/",
        "Item2": "The Binding of Isaac Antibirth OST Innocence Mangled (Depths)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224662069/32A8F9CB6F9C09372FA0DE28C18E72E7C1E1C15B/",
        "Item2": "The Binding of Isaac Antibirth OST Intro (Cinematic)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224663401/445F93960373F64C194C92DAEAEB757CCD5B728A/",
        "Item2": "The Binding of Isaac Antibirth OST Journey from a Jar to the Sky (Planetarium)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224664066/439728ED0794AAB417B2958F2B572EAD277236E6/",
        "Item2": "The Binding of Isaac Antibirth OST Lucidate (Library)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224665618/47A2C91C75A625CA1A83BF8F7FC22BC69933A6D1/",
        "Item2": "The Binding of Isaac Antibirth OST Machine in the Walls (Mausoleum)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224666850/983CC939CDC3A6FFF31DF52B31C06759D3DE505A/",
        "Item2": "The Binding of Isaac Antibirth OST Marble Forest (Catacombs)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224667543/808528FEC4186E8FEA853AD63E28BCA2A395DB86/",
        "Item2": "The Binding of Isaac Antibirth OST Memento Mori (Final Boss)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224668547/B6DE253A7B0EE1533D6D7C5BA92053D8EA2F121C/",
        "Item2": "The Binding of Isaac Antibirth OST Misericorde (Isaac Fight)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224670457/9AE969DB54B233E06EA1D1D89C29F315B68BE868/",
        "Item2": "The Binding of Isaac Antibirth OST Morphine (Dark Room)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224671402/7BDF52D1E24404A60E964C99BCB8ACD7F9B3E898/",
        "Item2": "The Binding of Isaac Antibirth OST Outside the Fold (Cellar)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224672052/1CB682E83A3810A188DD24540BA919C285702956/",
        "Item2": "The Binding of Isaac Antibirth OST Shadowdance (Sheol)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224672943/37D6A3F5D8333CB44B7E5401F8936F99140AACA5/",
        "Item2": "The Binding of Isaac Antibirth OST Spinning Intensifies (Boss Beaten + )"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224674657/2E344D429196E4C89F2E638B5658ED546AF156C9/",
        "Item2": "The Binding of Isaac Antibirth OST Spinning Out of Orbit (Boss Beaten)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224675711/32FB11610C3D92E679140F6C2D5FD498F096A3B4/",
        "Item2": "The Binding of Isaac Antibirth OST Subterranean Homesick Malign (Caves)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224677455/C8AD0D94AFBF6254D8C7595412B14635C2FE4F29/",
        "Item2": "The Binding of Isaac Antibirth OST Tandava (Boss)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224678969/19D5A38C06A380A8FF0F088969EEB7973F2AC101/",
        "Item2": "The Binding of Isaac Antibirth OST The Hammer of Pompeii (Necropolis)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224680060/52171592C3BB484FFFD3F29BB8C6FC6BBCD53D2C/",
        "Item2": "The Binding of Isaac Antibirth OST The Thief (Cathedral)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224681185/7AD30F7292FADC422ED3F00F19E9983F9C432807/",
        "Item2": "The Binding of Isaac Antibirth OST Ultimort (Chest)"
      },
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/771729113224682444/20A6BBEDD39D839AF16825012DEF53ADAC8E42E7/",
        "Item2": "The Binding of Isaac Antibirth OST Underscore (Credits)"
      }
    ]
  },
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 1.0,
      "g": 1.0,
      "b": 1.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": true,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 1.0,
    "ySize": 1.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.5,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0,
    "HandTransforms": [
      {
        "Color": "Red",
        "Transform": {
          "posX": -15.2383451,
          "posY": 3.55114412,
          "posZ": -15.4102287,
          "rotX": 0.0,
          "rotY": 45.0000038,
          "rotZ": 0.0,
          "scaleX": 11.655426,
          "scaleY": 9.174512,
          "scaleZ": 6.76723862
        }
      },
      {
        "Color": "Yellow",
        "Transform": {
          "posX": -15.3520737,
          "posY": 3.551146,
          "posZ": 15.104372,
          "rotX": 0.0,
          "rotY": 135.000015,
          "rotZ": 0.0,
          "scaleX": 11.6554871,
          "scaleY": 9.174512,
          "scaleZ": 6.767274
        }
      },
      {
        "Color": "Purple",
        "Transform": {
          "posX": 21.5308113,
          "posY": 3.551145,
          "posZ": 0.05564022,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 11.6555166,
          "scaleY": 9.174512,
          "scaleZ": 6.76731062
        }
      },
      {
        "Color": "Blue",
        "Transform": {
          "posX": 15.3141708,
          "posY": 3.551147,
          "posZ": 15.1422806,
          "rotX": 0.0,
          "rotY": 224.999985,
          "rotZ": 0.0,
          "scaleX": 11.6554813,
          "scaleY": 9.174512,
          "scaleZ": 6.767269
        }
      },
      {
        "Color": "White",
        "Transform": {
          "posX": -4.76837158E-07,
          "posY": 3.55115271,
          "posZ": -21.47526,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 11.655426,
          "scaleY": 9.174513,
          "scaleZ": 6.76723957
        }
      },
      {
        "Color": "Green",
        "Transform": {
          "posX": 4.76837158E-07,
          "posY": 3.551147,
          "posZ": 21.2933922,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 11.6554232,
          "scaleY": 9.174512,
          "scaleZ": 6.76723337
        }
      },
      {
        "Color": "Pink",
        "Transform": {
          "posX": 15.3141727,
          "posY": 3.551147,
          "posZ": -15.0311737,
          "rotX": 0.0,
          "rotY": 315.0,
          "rotZ": 0.0,
          "scaleX": 11.65544,
          "scaleY": 9.174512,
          "scaleZ": 6.76724625
        }
      },
      {
        "Color": "Orange",
        "Transform": {
          "posX": -21.5687141,
          "posY": 3.551146,
          "posZ": -0.20971489,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 11.65552,
          "scaleY": 9.174512,
          "scaleZ": 6.76731
        }
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "ObjectStates": [
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -1.00104415,
        "posY": 1.31627917,
        "posZ": 0.000112627167,
        "rotX": -0.00228228467,
        "rotY": 180.000183,
        "rotZ": 0.00260670646,
        "scaleX": 1.25705588,
        "scaleY": 1.0,
        "scaleZ": 1.25705588
      },
      "Nickname": "Notecard",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.928988457,
        "g": 0.932055652,
        "b": 0.9044512
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463166917/CB8B55C270BA45C4EABB6041B00C3AC196946342/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 5.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload(saved_data)\r\n    f_size = 260\r\n    light_mode = false\r\n    center_mode = false\r\n    tooltip_show = true\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        center_mode = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, center_mode, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,95}\r\n    end\r\n\r\n    if center_mode then\r\n        f_align = 3\r\n    else\r\n        f_align = 1\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = self.getName() .. \"\\n----------\\n\" .. self.getDescription()\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.createInput({\r\n        value = self.getName(), \r\n        input_function = \"editName\", \r\n        label = \"Notecard\",\r\n        function_owner = self, \r\n        alignment = 3,\r\n        position = {0,0.05,-1}, \r\n        width = 1800, \r\n        height = 300, \r\n        font_size = 160, \r\n        scale={x=1, y=1, z=1},\r\n        font_color= f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createInput({\r\n        value = self.getDescription(), \r\n        label = \"\\nClick and type here\\n\\nFlip for settings\",\r\n        input_function = \"editDesc\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position = {0,0.05,0.28}, \r\n        width = 1800, \r\n        height = 1000, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createButton({\r\n        label=\"- Notecard Settings -\",\r\n        tooltip=\"- Notecard Settings -\",\r\n        click_function=\"null\",\r\n        function_owner=self,\r\n        position={0,-0.05,-1.1},\r\n        rotation={180,180,0},\r\n        height=300,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=140,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,-0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if center_mode then\r\n        centerButtonText = \"[ Set left align ]\"\r\n    else\r\n        centerButtonText = \"[ Set center align ]\"\r\n    end\r\n    self.createButton({\r\n        label=centerButtonText,\r\n        tooltip=centerButtonText,\r\n        click_function=\"swap_align\",\r\n        function_owner=self,\r\n        position={0,-0.05,0},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide description in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show description in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"Sample Text\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position={0,-0.05,1.1},\r\n        rotation={180,180,0},\r\n        width = 1800, \r\n        height = 250, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeInput(2)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction update_fcolor()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction editDesc(_obj, _string, value) \r\n    self.setDescription(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction setTooltips()\r\n    title = self.getName()\r\n    if title == \"\" then\r\n        title = \"Notecard\"\r\n    end\r\n    desc = self.getDescription()\r\n\r\n    if tooltip_show then\r\n        ttText = title .. \"\\n----------\\n\" .. desc\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editInput({\r\n        index = 1,\r\n        value = self.getDescription(),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend",
      "LuaScriptState": "[false,true,false]",
      "GUID": "56a44e"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 3.000005,
        "posY": 1.31623781,
        "posZ": -1.00000155,
        "rotX": -0.00279249717,
        "rotY": 179.999878,
        "rotZ": 0.00311074848,
        "scaleX": 0.5,
        "scaleY": 1.0,
        "scaleZ": 0.5
      },
      "Nickname": "Counter",
      "Description": "Left click - Increase\nRight click - Decrease",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2560971,
        "g": 0.2560971,
        "b": 0.2560971
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463059274/DE73B64E1B5C6F272EA3BEE5EF458E73E48FF03D/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 5.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    tooltip_show = true\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {0.9,0.9,0.9,95}\r\n    else\r\n        f_color = {0.1,0.1,0.1,100}\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      tooltip=ttText,\r\n      function_owner=self,\r\n      position={0,0.05,-0.2},\r\n      height=600,\r\n      width=1000,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=600,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n    self.createInput({\r\n        value = self.getName(), \r\n        input_function = \"editName\", \r\n        tooltip=ttText,\r\n        label = \"Counter\",\r\n        function_owner = self, \r\n        alignment = 3,\r\n        position = {0,0.05,1.7}, \r\n        width = 1200, \r\n        height = 1000, \r\n        font_size = 200, \r\n        scale={x=1, y=1, z=1},\r\n        font_color= f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide value in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show value in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.2},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=150,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.6},\r\n        rotation={180,180,0},\r\n        height=150,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=150,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n\r\n    self.createButton({\r\n        label=\"[ Reset ]\",\r\n        tooltip=\"[ Reset ]\",\r\n        click_function=\"reset_val\",\r\n        function_owner=self,\r\n        position={0,-0.05,1.4},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=250,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"#\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\", \r\n        function_owner = self, \r\n        alignment = 3,\r\n        position={0,-0.05,-0.8},\r\n        rotation={180,180,0},\r\n        width = 600, \r\n        height = 800, \r\n        font_size = 1200, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n        updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend",
      "LuaScriptState": "[true,0]",
      "GUID": "85c4c6"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 3.00002074,
        "posY": 1.31627715,
        "posZ": 0.999999464,
        "rotX": 0.00454136636,
        "rotY": 180.0001,
        "rotZ": -0.00243972545,
        "scaleX": 0.5,
        "scaleY": 1.0,
        "scaleZ": 0.5
      },
      "Nickname": "Counter",
      "Description": "Left click - Increase\nRight click - Decrease",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2560971,
        "g": 0.2560971,
        "b": 0.2560971
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463059274/DE73B64E1B5C6F272EA3BEE5EF458E73E48FF03D/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 5.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    tooltip_show = true\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {0.9,0.9,0.9,95}\r\n    else\r\n        f_color = {0.1,0.1,0.1,100}\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      tooltip=ttText,\r\n      function_owner=self,\r\n      position={0,0.05,0.2},\r\n      height=600,\r\n      width=1000,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=800,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide value in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show value in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.2},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=150,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.6},\r\n        rotation={180,180,0},\r\n        height=150,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=150,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n\r\n    self.createButton({\r\n        label=\"[ Reset ]\",\r\n        tooltip=\"[ Reset ]\",\r\n        click_function=\"reset_val\",\r\n        function_owner=self,\r\n        position={0,-0.05,1.4},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=250,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"#\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\", \r\n        function_owner = self, \r\n        alignment = 3,\r\n        position={0,-0.05,-0.8},\r\n        rotation={180,180,0},\r\n        width = 600, \r\n        height = 800, \r\n        font_size = 1200, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n        updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend",
      "LuaScriptState": "[true,0]",
      "GUID": "576ccd"
    }
  ],
  "DecalPallet": [],
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "VersionNumber": "v12.1.6"
}