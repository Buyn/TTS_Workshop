{
  "SaveName": "[Tool] InfinityLayout Spawner",
  "GameMode": "InfinityLayout",
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Date": "5/15/2019 6:09:30 AM",
  "Table": "Table_Custom_Square",
  "TableURL": "https://i.imgur.com/x0jBFAA.png",
  "Sky": "Sky_Museum",
  "SkyURL": "https://i.imgur.com/H7HXE9d.jpg",
  "Note": "",
  "Rules": "",
  "XmlUI": "<!-- -->",
  "LuaScript": "function onLoad()\n\nend",
  "LuaScriptState": "",
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.28194043,
      "g": 0.3140761,
      "b": 0.355852455
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": true,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0,
    "HandTransforms": [
      {
        "Color": "Red",
        "Transform": {
          "posX": -9.482677,
          "posY": 2.88576484,
          "posZ": -28.566576,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 9.482673,
          "scaleY": 6.6973877,
          "scaleZ": 3.55600476
        }
      },
      {
        "Color": "Yellow",
        "Transform": {
          "posX": -28.6376839,
          "posY": 2.88576484,
          "posZ": 9.48268,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 9.48324,
          "scaleY": 6.6973877,
          "scaleZ": 3.5562892
        }
      },
      {
        "Color": "Purple",
        "Transform": {
          "posX": 28.5665646,
          "posY": 2.88576484,
          "posZ": 9.48268,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 9.48324,
          "scaleY": 6.6973877,
          "scaleZ": 3.5562892
        }
      },
      {
        "Color": "Blue",
        "Transform": {
          "posX": 11.8414936,
          "posY": 2.88576484,
          "posZ": 28.6732559,
          "rotX": 0.0,
          "rotY": 179.8,
          "rotZ": 0.0,
          "scaleX": 9.483454,
          "scaleY": 6.6973877,
          "scaleZ": 3.55626917
        }
      },
      {
        "Color": "White",
        "Transform": {
          "posX": 9.482677,
          "posY": 2.88576484,
          "posZ": -28.60213,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 9.482673,
          "scaleY": 6.697391,
          "scaleZ": 3.55600476
        }
      },
      {
        "Color": "Green",
        "Transform": {
          "posX": -10.3242645,
          "posY": 2.88576484,
          "posZ": 28.6732559,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 9.482673,
          "scaleY": 6.6973877,
          "scaleZ": 3.55600476
        }
      },
      {
        "Color": "Pink",
        "Transform": {
          "posX": 28.5665646,
          "posY": 2.88576484,
          "posZ": -9.399705,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 9.48324,
          "scaleY": 6.6973877,
          "scaleZ": 3.5562892
        }
      },
      {
        "Color": "Orange",
        "Transform": {
          "posX": -28.6021252,
          "posY": 2.88576484,
          "posZ": -9.672333,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 9.48324,
          "scaleY": 6.6973877,
          "scaleZ": 3.5562892
        }
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "ObjectStates": [
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 3.24814067E-07,
        "posY": 1.140759,
        "posZ": -27.9999981,
        "rotX": 1.5704029E-06,
        "rotY": 179.9993,
        "rotZ": -2.79595884E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "InfinityLayout Controller",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://i.imgur.com/cAJKP96.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.2,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onLoad()\n\til = {\n\t\turl = \"https://infinitylayout.herokuapp.com/\",\n\t\tgrid = {\n\t\t\tbase_y = 0.96,\n\t\t\tdata = {},\n\t\t\tsize = {\n\t\t\t\t24,\n\t\t\t\t24,\n\t\t\t},\n\t\t\tscale = {\n\t\t\t\t2,\n\t\t\t\t2,\n\t\t\t\t2,\n\t\t\t}\n\t\t},\n\t\tblocks = {\n\t\t\t[\"0\"] = {\n\t\t\t\tname  = \"Ground\",\n\t\t\t\tcolor = {1, 1, 1},\n\t\t\t\tscale = {1, 0.1, 1}\n\t\t\t},\n\t\t\t[\"1\"] = {\n\t\t\t\tname  = \"Short Building\",\n\t\t\t\tcolor = {0.7, 0.7, 0.7},\n\t\t\t\tscale = {1, 1, 1}\n\t\t\t},\n\t\t\t[\"2\"] = {\n\t\t\t\tname  = \"Tall Building\",\n\t\t\t\tcolor = {0.55, 0.55, 0.55},\n\t\t\t\tscale = {1, 2, 1}\n\t\t\t},\n\t\t\t[\"s\"] = {\n\t\t\t\tname  = \"Scatter Terrain\",\n\t\t\t\tcolor = {0.3, 0.3, 0.3},\n\t\t\t\ttext  = \"S\",\n\t\t\t\tscale = {1, 0.1, 1}\n\t\t\t},\n\t\t\t[\"t\"] = {\n\t\t\t\tname  = \"Special Terrain\",\n\t\t\t\tcolor = {0, 0.8, 0.1},\n\t\t\t\ttext  = \"T\",\n\t\t\t\tscale = {1, 0.1, 1}\n\t\t\t},\n\t\t\t[\"1t\"] = {\n\t\t\t\tname  = \"Rooftop Vis Blocker\",\n\t\t\t\tcolor = {0.45, 0.45, 0.45},\n\t\t\t\tscale = {1, 1.5, 1}\n\t\t\t},\n\t\t\t[\"2t\"] = {\n\t\t\t\tname  = \"Rooftop Vis Blocker\",\n\t\t\t\tcolor = {0.35, 0.35, 0.35},\n\t\t\t\tscale = {1, 2.5, 1}\n\t\t\t},\n\n\t\t},\n\t\tobjs = {},\n\t}\n\tdrawGui()\nend\n\n\nfunction drawGui()\n\tself.clearButtons()\n\tself.createButton({\n\t\tclick_function = \"destroyGridObjects\",\n\t\tfunction_owner = self,\n\t\tlabel          = \"Clear\",\n\t\tposition       = {0, 0.1, 0.5},\n\t\twidth          = 1500,\n\t\theight         = 300,\n\t\tfont_size      = 280,\n\t\tcolor          = {0, 0, 0},\n\t\tfont_color     = {1, 1, 1},\n\t})\n\tself.createButton({\n\t\tclick_function = \"getHtmlData\",\n\t\tfunction_owner = self,\n\t\tlabel          = \"Spawn Map\",\n\t\tposition       = {0, 0.1, -0.5},\n\t\twidth          = 1500,\n\t\theight         = 300,\n\t\tfont_size      = 280,\n\t\tcolor          = {0, 0, 0},\n\t\tfont_color     = {1, 1, 1},\n\t})\nend\n\nfunction getHtmlData()\n    WebRequest.get(il.url, function(request) \n    \tif request.is_done then\n    \t\til.grid.data = parseHtml(request.text)\n    \t\tstartLuaCoroutine(self, \"spawnGridObjects\")\n    \tend\n    end\n    )\nend\n\tfunction parseHtml(html)\n\t\t--using string.gmatch was thrtowing an error about being too complex, so instead we\n\t\t--resorting to some hot-fudgery to extract the table from the returned html\n\t\t--log(\"Parsing html...\")\n\t\tlocal t, f, r, c = {}, false, 0, 0\n\t\tfor line in html:gmatch(\"([^\\r\\n]*)[\\r\\n]\") do\n\t\t\tif string.match(line, \"class=\\\"map\\\"\") then f = true end\n\t\t\tif f then\n\t\t\t\tif string.match(line, \"<tr\") then\n\t\t\t\t\t--found a row, increment row count and reset cell count\n\t\t\t\t\tr = r + 1\n\t\t\t\t\tc = 0\n\t\t\t\t\tt[r] = {}\n\t\t\t\tend\n\t\t\t\tif string.match(line, \"<td \") then\n\t\t\t\t\t--found a cell, add value\n\t\t\t\t\tc = c + 1\n\t\t\t\t\tt[r][c] = string.match(line, \">(.-)<\"):lower()\n\t\t\t\tend\n\t\t\t\tif string.match(line, \"</table>\") then f = false end\n\t\t\tend\n\t\tend\n\t\t--log(t)\n\t\treturn t\n\tend\nfunction destroyGridObjects()\n\tif table.count(il.objs) > 0 then\n\t\tbroadcastToAll(\"Clearing map...\", \"Orange\")\n\t\t--log(\"Removing old objects\")\n\t\tfor _,obj in pairs(il.objs) do\n\t\t\tobj.destruct()\n\t\tend\n\t\til.objs = {}\n\tend\n\treturn true\nend\nfunction spawnGridObjects()\n\tlocal d = destroyGridObjects()\n\tfor rk, r in ipairs(il.grid.data) do\n\t\tfor ck, c in ipairs(r) do\n\t\t\t--log(\"Spawning tile type \"..c..\" at cell \"..ck..\":\"..rk)\n\t\t\tspawnTile(c, {ck, rk})\n\t\t\tif ck % 2 == 0 then\n\t\t\t\tcoroutine.yield(0)\n\t\t\tend\n\t\tend\n\tend\n\tbroadcastToAll(\"Map spawned!\", \"Green\")\n\treturn 1\nend\n\nfunction spawnTile(id, cell)\n\tlocal pos = cellToPosition(cell)\n\t\t  pos[2] = il.grid.base_y+((il.blocks[id].scale[2]*il.grid.scale[2])/2)\n\tlocal scale = {\n\t\til.blocks[id].scale[1]*il.grid.scale[1],\n\t\til.blocks[id].scale[2]*il.grid.scale[2],\n\t\til.blocks[id].scale[3]*il.grid.scale[3],\n\t}\n\n\t--set cell color\n\tlocal color = il.blocks[id].color\n\tif cell[2] < 7 and (id == \"0\" or id == \"s\") then\n\t\tcolor = {1, 0, 0}\n\telseif cell[2] > 18 and (id == \"0\" or id == \"s\") then\n\t\tcolor = {0, 0, 1}\n\tend\n\n\tlocal p = {\n        type \t\t\t  = \"BlockSquare\",\n        position          = pos,\n        scale             = scale,\n        sound             = false,\n        callback_function = function(obj) \n        \t--object spawn callback\n        \t\n        \til.objs[obj.guid] = obj\n        \tobj.setLock(true)\n        \tobj.setColorTint(color)\n        \tobj.setName(il.blocks[id].name)\n\n        \t\n        \t--create button for tiles with text\n        \tif il.blocks[id].text then\n        \t\tobj.createButton({\n\t\t\t\t\tclick_function = \"btn_foo\",\n\t\t\t\t\tfunction_owner = self,\n\t\t\t\t\tlabel          = il.blocks[id].text,\n\t\t\t\t\tposition       = {0, 0.5+(0.1/il.blocks[id].scale[2]), 0},\n\t\t\t\t\twidth          = 400,\n\t\t\t\t\theight         = 400,\n\t\t\t\t\tfont_size      = 280,\n\t\t\t\t\tcolor          = {0.7,0.7,0.7,1},\n\t\t\t\t\tfont_color     = {1, 1, 1},\n\t\t\t\t\ttooltip        = il.blocks[id].name,\n        \t\t})\n        \tend\n        end\n    }\n    local o = spawnObject(p)\nend\nfunction btn_foo(obj, color, alt)\n\tlog(obj.guid)\n\tlocal cell = positionToCell(obj.getPosition())\n\tprint(\"Cell \"..cell[1]..\":\"..cell[2]..\" clicked\")\nend\nfunction cellToPosition(c)\n\tif type(c)~=\"table\" then return false end\n\t--log(\"coordsToPos({\"..table.concat(c, \", \")..\"}, \"..tostring(corner)..\")\")\n\tlocal start_x = 0 - (il.grid.size[1] * il.grid.scale[1]) / 2\n\tlocal start_z = 0 - (il.grid.size[2] * il.grid.scale[3]) / 2\n\tlocal pos_x   = start_x + (c[1] * il.grid.scale[1]) - (il.grid.scale[1]/2)\n\tlocal pos_z   = start_z + (c[2] * il.grid.scale[3]) - (il.grid.scale[3]/2)\n\treturn {\n\t\tpos_x, il.grid.base_y, pos_z,\n\t\tx = pos_x, y = c[3], z = pos_z\n\t}\nend\nfunction positionToCell(pos)\n\tif type(pos)~=\"table\" then return false end\n\tlocal start_x = 0 - (il.grid.size[1] * il.grid.scale[1]) / 2\n\tlocal start_z = 0 - (il.grid.size[2] * il.grid.scale[3]) / 2\n\tlocal pos_x = math.floor((pos[1] - start_x) / il.grid.scale[1]) + 1\n\tlocal pos_z = math.floor((pos[3] - start_z) / il.grid.scale[3]) + 1\n\treturn {pos_x, pos_z}\nend\nfunction table.count(t)\n\tlocal c = 0\n\tfor _,_ in pairs(t) do\n\t\tc = c + 1\n\tend\n\treturn c\nend",
      "LuaScriptState": "",
      "GUID": "6a1c91"
    }
  ],
  "DecalPallet": [],
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "VersionNumber": "v12.0.3.3"
}